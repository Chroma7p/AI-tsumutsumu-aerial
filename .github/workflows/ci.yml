name: CI

on:
  push:
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@postgres-db:5432/${{ secrets.POSTGRES_DB }}
      QDRANT_HOST: qdrant-db
      QDRANT_PORT: 6333
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Check out the code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker images
        run: docker compose -f compose.ci.yml build

      - name: Start services
        run: docker compose -f compose.ci.yml up -d


      - name: Wait for containers to start
        run: |
          sleep 30
          docker compose -f compose.ci.yml ps

      - name: prisma db push
        run: docker compose -f compose.ci.yml exec -T bot poetry run prisma db push

      - name: python src/seed.py
        run: docker compose -f compose.ci.yml exec -T bot poetry run python -u src/seed.py

      - name: run tests
        run: docker compose -f compose.ci.yml exec -T bot poetry run pytest ./tests

      - name: check docker logs
        run: |
          docker compose -f compose.ci.yml logs bot
      
      - name: Shut down services
        run: docker compose -f compose.ci.yml down
